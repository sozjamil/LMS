"""
Django settings for lms_backend project.

Generated by 'django-admin startproject' using Django 4.2.5.

For more information on this file, see
https://docs.djangoproject.com/en/4.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.2/ref/settings/
"""
from pathlib import Path
from environs import Env
env = Env()
env.read_env()

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

import pymysql
pymysql.install_as_MySQLdb()

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.2/howto/deployment/checklist/
# SECURITY WARNING: keep the secret key used in production secret!

import os
SECRET_KEY = os.environ.get('DJANGO_SECRET_KEY')
DJANGO_SECRET_KEY='your-secret-key-here'


# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = False

ALLOWED_HOSTS = ['127.0.0.1', 'localhost',  'codespace-uq5o.onrender.com']

# Media Files on S3
INSTALLED_APPS = [
    #adding a modern, styled admin interface
    'jazzmin', 
    
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',

    # Third-party apps
    'rest_framework',
    'corsheaders',
    # 'django.contrib.sites',
    'rest_framework_simplejwt',
    'rest_framework_simplejwt.token_blacklist',

    # Custom apps
    'courses',
    
    #AWS S3 details.
    'storages',
    

]
# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.2/howto/static-files/

STATIC_URL = 'static/'
STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')
STATICFILES_STORAGE = 'whitenoise.storage.CompressedManifestStaticFilesStorage'

DEFAULT_FILE_STORAGE = 'storages.backends.s3boto3.S3Boto3Storage'


AWS_ACCESS_KEY_ID = os.environ.get("AWS_ACCESS_KEY_ID")
AWS_SECRET_ACCESS_KEY = os.environ.get("AWS_SECRET_ACCESS_KEY")
AWS_REGION = os.environ.get("AWS_REGION")
AWS_STORAGE_BUCKET_NAME = os.environ.get("AWS_STORAGE_BUCKET_NAME")
AWS_S3_CUSTOM_DOMAIN = f'{AWS_STORAGE_BUCKET_NAME}.s3.amazonaws.com'

AWS_S3_FILE_OVERWRITE = False  # Prevent overwriting files with same name
AWS_DEFAULT_ACL = 'public-read'         # Make files public by default 
AWS_QUERYSTRING_AUTH = False   # Remove ?AWSAccessKeyId=... from URLs

# Media files settings
MEDIA_URL = f'https://{AWS_S3_CUSTOM_DOMAIN}/'

CORS_ALLOW_ALL_ORIGINS = True


# Allow CORS for your frontend
CORS_ALLOWED_ORIGINS = [
    "https://codespace-t4xo.onrender.com",
      # "http://localhost:5173",React frontend
]
# Application definition



MIDDLEWARE = [
    'corsheaders.middleware.CorsMiddleware',

    'django.middleware.security.SecurityMiddleware',
    #  allows Django to efficiently serve static files (like CSS/JS)
    'whitenoise.middleware.WhiteNoiseMiddleware',  

    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'lms_backend.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'lms_backend.wsgi.application'


# Database
# https://docs.djangoproject.com/en/4.2/ref/settings/#databases

DATABASES = {
    'default': {
       'ENGINE': 'django.db.backends.mysql',
       'NAME': os.environ.get('MYSQL_DATABASE'),
       'USER': os.environ.get('MYSQL_USER'),
       'PASSWORD': os.environ.get('MYSQL_PASSWORD'),
       'HOST': os.environ.get('MYSQL_HOST'),
       'PORT': os.environ.get('MYSQL_PORT', '3306'),
       'OPTIONS': {
            'init_command': "SET sql_mode='STRICT_TRANS_TABLES'",
        },
    }
}


# Password validation
# https://docs.djangoproject.com/en/4.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True



# Default primary key field type
# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'



REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': (
        'rest_framework_simplejwt.authentication.JWTAuthentication',
    ),
    'DEFAULT_PERMISSION_CLASSES': [
        'rest_framework.permissions.IsAuthenticated',
    ],
}

from datetime import timedelta

SIMPLE_JWT = {
    'ACCESS_TOKEN_LIFETIME': timedelta(minutes=15),  # Short lifespan for access token
    'REFRESH_TOKEN_LIFETIME': timedelta(days=7),  # Longer lifespan for refresh token
    'ROTATE_REFRESH_TOKENS': True,  # Issue new refresh token on refresh
    'BLACKLIST_AFTER_ROTATION': True,  # Blacklist old refresh tokens
}


JAZZMIN_SETTINGS = {
    "site_title": "CodeSpace Admin",
    "site_header": "CodeSpace Admin",
    "site_brand": "CodeSpace",
    "welcome_sign": "Welcome to CodeSpace Admin",
    "copyright": "CodeSpace 2025",
    "search_model": ["auth.User", "courses.Course"],

    # Logo (optional)

    # Custom icons for apps/models
    "icons": {
        "auth": "fas fa-users-cog",
        "courses.Course": "fas fa-book",
        "courses.Profile": "fas fa-user-graduate",
    },

    # Custom menu links (optional)
    "topmenu_links": [
        {"name": "Home", "url": "/", "permissions": ["auth.view_user"]},
        {"model": "auth.User"},
        {"app": "courses"},
    ],

    # Theme (optional)
    "theme": "darkly",  # Try "darkly", "flatly", "cosmo", etc.
}